//
//  SongSearchPresenter.swift
//  FindYourSong
//
//  Created by Fernando Garcia on 27-02-20.
//  Copyright (c) 2020 Fernando Garcia. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SongSearchPresentationLogic
{
    func presentFetchedSongs(response: SongSearch.FetchSongs.Response)
    func presentFilteredSongs(response: SongSearch.SongsPagination.Response)
}

class SongSearchPresenter: SongSearchPresentationLogic
{
    weak var viewController: SongSearchDisplayLogic?
    
    // MARK: Fetch Songs
    
    func presentFetchedSongs(response: SongSearch.FetchSongs.Response)
    {
        let displayedSongs = convertFetchedSongs(songs: response.songs)
        let viewModel = SongSearch.FetchSongs.ViewModel(fetchedSongs: displayedSongs)
        viewController?.getFetchedSongs(viewModel: viewModel)
    }
    
    func presentFilteredSongs(response: SongSearch.SongsPagination.Response) {
        let leftArrowStatus = response.leftArrowStatus
        let rightArrowStatus = response.rightArrowStatus
        var navigationBarTitle: String
        if (response.filteredSongs.count > 0) {
            navigationBarTitle = "Page \(response.currentPage)"
        } else {
            navigationBarTitle = "No results :("
        }
        let filteredSongs = convertFilteredSongs(songs: response.filteredSongs)
        
        let viewModel = SongSearch.SongsPagination.ViewModel(displayedSongs: filteredSongs, title: navigationBarTitle, leftArrowStatus: leftArrowStatus, rightArrowStatus: rightArrowStatus)
        viewController?.displayFilteredSongs(viewModel: viewModel)
    }
    
    private func convertFetchedSongs(songs: [Song]) -> [SongSearch.FetchSongs.ViewModel.FetchedSong]
    {
        return songs.map { SongSearch.FetchSongs.ViewModel.FetchedSong(name: $0.name, artistName: $0.artistName, albumArtworkUrl100: $0.albumArtworkUrl100, albumId: $0.albumId) }
    }
    
    private func convertFilteredSongs(songs: [Song]) -> [SongSearch.SongsPagination.ViewModel.DisplayedSong]
    {
        return songs.map { SongSearch.SongsPagination.ViewModel.DisplayedSong(name: $0.name, artistName: $0.artistName, albumArtworkUrl100: $0.albumArtworkUrl100, albumId: $0.albumId) }
    }
}
